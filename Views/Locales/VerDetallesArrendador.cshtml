@model LocalViewModel

@{
    ViewData["Title"] = "Ver Detalles Arrendador";
    Layout = "~/Views/Shared/_LoggedLayout.cshtml";
    var local = Model;
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 style="color:black">@local.Nombre</h3>
                </div>
                <div class="card-body">

                    <div class="container">
                        @if (local.Imagenes != null && local.Imagenes.Count > 0)
                        {
                            <div class="row">
                                <!-- Banner (Imagen Arriba) -->
                                <div class="col-12 text-center ">
                                    <img src="@local.Imagenes[0].Url" class="img-fluid" style="width: 850px; height: 350px; object-fit: cover; object-position: center;">
                                </div>
                            </div>
                            <div class="row mt-3">
                                <!-- Imagen Abajo Izquierda -->
                                <div class="col-md-6 text-center">
                                    <img src="@local.Imagenes[1].Url" class="img-fluid" style="height: 300px;">
                                </div>
                                <!-- Imagen Abajo Derecha -->
                                <div class="col-md-6 text-center">
                                    <img src="@local.Imagenes[2].Url" class="img-fluid" style="height: 300px;">
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <!-- Banner (Imagen Arriba) -->
                                <div class="col-12 text-center ">
                                    <img src="rutaImagenPorDefecto.jpg" class="img-fluid">
                                </div>
                            </div>
                            <div class="row mt-3">
                                <!-- Imagen Abajo Izquierda -->
                                <div class="col-md-6 text-center">
                                    <img src="rutaImagenPorDefecto.jpg" class="img-fluid">
                                </div>
                                <!-- Imagen Abajo Derecha -->
                                <div class="col-md-6 text-center">
                                    <img src="rutaImagenPorDefecto.jpg" class="img-fluid">
                                </div>
                            </div>
                        }
                    </div>



                    <div class="row mt-3">
                        <div class="col-12">
                            <br />
                            <p><strong><i style="color:black" class="bi bi-card-text"></i> : </strong>@local.Descripcion</p>
                            <p><strong><i style="color:black" class="bi bi-geo-alt-fill"></i> : </strong>@local.Direccion</p>
                            <p><strong><i style="color:black" class="bi bi-people"></i> : </strong>@local.Capacidad</p> <br />

                            <h5 style="color:black">Horarios</h5>
                            <label for="fecha">Fecha:</label>

                            <input type="date" id="fechaReserva" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")">
                            <button class="btn ms-4" onclick="verificarDisponibilidad()">Verificar Disponibilidad</button>
                            <br /> <br />

                            @foreach (var horario in local.Horarios)
                            {
                                <p id="horario_@horario.ID">@horario.HoraInicio - @horario.HoraFin</p>
                            }


                            <br />
                            <br />
                            <h5 style="color:black">Calificaciones</h5>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function verificarDisponibilidad() {

        // Crear un array con los IDs de los horarios
        let horariosIds = [@Html.Raw(string.Join(',', local.Horarios.Select(h => h.ID)))];

        let localHorarios = @Html.Raw(Json.Serialize(local.Horarios)); // Aquí serializas la lista una sola vez

        let fechaSeleccionada = document.getElementById("fechaReserva").value;
        let localId = @local.Id; // Asumo que tienes un ID en tu modelo de Local.

        horariosIds.forEach(horarioId => {
            // Construye la URL de tu API.
            let url = `http://localhost:5260/api/Reservas/verificarDisponibilidad?localId=${localId}&horarioId=${horarioId}&fecha=${fechaSeleccionada}`;

            fetch(url)
                .then(response => response.json())
                .then(isDisponible => {
                    let horarioElement = document.getElementById("horario_" + horarioId);


                    let horario = localHorarios.find(h => h.id == horarioId); // Aquí usas localHorarios


                    if (isDisponible) {
                        horarioElement.style.backgroundColor = "#d4edda";
                        horarioElement.textContent = `${horario.horaInicio} - ${horario.horaFin} (Disponible)`;
                    } else {
                        horarioElement.style.backgroundColor = "#f8d7da";
                        horarioElement.textContent = `${horario.horaInicio} - ${horario.horaFin} (No Disponible)`;
                    }
                });
        });
    }


</script>

<style>
    /* Estilo del input de fecha para que combine con tu página */
    input[type="date"] {
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid #b3d1e6; /* Un borde en tono azul claro */
        font-size: 15px;
        background-color: #f6f9fc; /* Un fondo azul muy claro */
        color: #4a6f8d; /* Un color de texto azul medio */
    }

        /* Estilo para el ícono de calendario que aparece en algunos navegadores */
        input[type="date"]::-webkit-calendar-picker-indicator {
            background-color: transparent;
            color: #4a6f8d; /* Un color azul medio para el ícono */
            cursor: pointer;
            padding: 5px;
        }

        /* Cambiar el color de fondo y el ícono al hacer hover */
        input[type="date"]:hover::-webkit-calendar-picker-indicator {
            background-color: #e6f1f9; /* Un fondo azul más claro al hacer hover */
            color: #2f4c6b; /* Un color azul más oscuro para el ícono al hacer hover */
        }
</style>